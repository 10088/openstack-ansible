<VirtualHost *:80>
    ServerName {{ kibana_server_name }}
    RewriteEngine On
    RewriteCond %{HTTPS} !=on
    RewriteRule ^/?(.*) https://%{HTTP_HOST}:{{ kibana_ssl_port }}/$1 [R,L]
</VirtualHost>

<VirtualHost *:{{ kibana_ssl_port }}>
    ServerName {{ kibana_server_name }}

    LogLevel  {{  kibana_log_level|default('info') }}
    ErrorLog  /var/log/apache2/kibana-error.log
    CustomLog /var/log/apache2/ssl_access.log combined
    Options +FollowSymLinks

    SSLEngine on
    SSLCertificateFile    {{ kibana_ssl_cert|default('/etc/ssl/certs/apache.cert') }}
    SSLCertificateKeyFile {{ kibana_ssl_key|default('/etc/ssl/private/apache.key') }}
    SSLCACertificatePath  {{ kibana_ssl_cert_path|default('/etc/ssl/certs') }}
    SSLCARevocationPath   {{ kibana_ssl_cert_path|default('/etc/ssl/certs') }}
    SetEnvIf User-Agent ".*MSIE.*" nokeepalive ssl-unclean-shutdown

    DocumentRoot {{ kibana_root }}

    <Directory />
      Options FollowSymLinks
      AllowOverride None
    </Directory>

    # ElasticSearch Reverse Proxy
    <Location /elasticsearch/>
        ProxyPass http://{{ hostvars[groups['elasticsearch'][0]]['container_address'] }}:{{ elasticsearch_http_port }}/
        ProxyPassReverse /
    </Location>

    <Directory {{ kibana_root }}>
      Options Indexes FollowSymLinks MultiViews
      AllowOverride AuthConfig
      AuthType Basic
      AuthName Kibana
      AuthUserFile /etc/apache2/users
      Require user kibana
    </Directory>
</VirtualHost>
