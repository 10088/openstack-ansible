require 'spec_helper'

os_packages  = %w( libsasl2-dev debhelper dh-apparmor docutils-common
                   libjs-sphinxdoc libjs-underscore libxslt1.1 libldap2-dev
                   apache2 apache2-utils libapache2-mod-wsgi)

pip_packages = %w( repoze.lru pbr MySQL-python python-keystoneclient keystone )

directories  = %w( /etc/keystone /etc/keystone/ssl /var/lib/keystone
                   /var/log/keystone )

conf_files   = %w( default_catalog.templates keystone-paste.ini keystone.conf
                   policy.json policy.v3cloudsample.json )

os_packages.each do |os|
  describe package(os) do
    it { should be_installed }
  end
end

pip_packages.each do |pip|
  describe package(pip) do
    it { should be_installed.by('pip') }
  end
end

describe user('keystone') do
  it { should exist }
end

describe group('keystone') do
  it { should exist }
end

directories.each do |d|
  describe file(d) do
    it { should be_directory }
    it { should be_owned_by 'keystone' }
    it { should be_grouped_into 'keystone' }
  end
end

conf_files.each do |f|
  describe file("/etc/keystone/#{f}") do
    it { should be_file }
    it { should be_owned_by 'keystone' }
    it { should be_grouped_into 'keystone' }
  end
end

# the following host checks could be run from all containers, however
# we'll assume if they're accessible from the keystone containers then
# they're accessible to the rest
describe host('{{ mysql_address }}') do
  it { should be_reachable.with( :port => {{ mysql_port }} ) }
end

# rabbit_hosts may be a comma-separated list of ip:port rabbit servers,
# so we take that into account here
'{{ rabbit_hosts }}'.split(',').each do |rabbit|
  host = rabbit.split(':')[0]
  port = rabbit.split(':')[1]

  describe host(host) do
    it { should be_reachable.with( :port => port ) }
  end
end
